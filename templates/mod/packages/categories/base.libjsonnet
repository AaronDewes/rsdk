local core_packages = import "core.libjsonnet";
local distro_check = import "../../../lib/distro_check.libjsonnet";

function(suite, product, temp_dir, vendor_packages=false) core_packages(suite, product, temp_dir, vendor_packages=vendor_packages) + {
    mmdebstrap+: {
        packages+:
        // Firmware
(if distro_check(suite) == "debian"
then
        [
            "firmware-iwlwifi",
            "firmware-linux",
        ]
else
        []
) +
        [
            // System utils
            "apt-listchanges",
            "apt-transport-https",
            "apt-utils",
            "bash-completion",
            "bc",
            "binutils",
            "curl",
            "eject",
            "exfat-fuse",
            "file",
            "gpg",
            "haveged",
            "htop",
            "lbzip2",
            "less",
            "locales",
            "man-db",
            "nano",
            "needrestart",
            "ntfs-3g",
            "python-is-python3",
            "python3",
            "python3-pip",
            "software-properties-common",
            "sysfsutils",
            "tmux",
            "u-boot-tools",
            "vim",
            "wget",
            "whiptail",
            "xz-utils",
            "zram-tools",
        ] +

(if suite == "bookworm"
then
        [
            "efibootmgr",
            "systemd-boot",
        ]
else
        []
) +

        [
            // Network
            "avahi-daemon",
            "ca-certificates",
            "dnsmasq",
            "ldnsutils",
            "ifupdown",
            "iproute2",
            "iptables",
            "iputils-ping",
            "samba",
            "wireless-regdb",
        ] +

        [
            // Audio
            "alsa-ucm-conf",
            "alsa-utils",
        ] +

(if suite == "bookworm"
then
        [
            "pipewire-audio",
        ]
else
        [
            "pulseaudio",
            "pulseaudio-module-bluetooth",
        ]
) +

        [
            // Hardware
            "gpiod",
            "hdparm",
            "i2c-tools",
            "mtd-utils",
            "pciutils",
            "rfkill",
            "spi-tools",
            "usbutils",
        ] +

        [
            // Radxa
            "android-tools-adbd",
            "libreelec-alsa-utils",
            "radxa-otgutils",
        ],

        "customize-hooks"+:
(if distro_check(suite) == "debian"
then
        [
            'chroot "$1" update-alternatives --set regulatory.db /lib/firmware/regulatory.db-upstream',
        ]
else
        []
),
    },
}
