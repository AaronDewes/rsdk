#!/usr/bin/env bash

SCRIPT_DIR="$(dirname "$(realpath "$0")")"
# shellcheck source=bin/lib/utils.sh
source "$SCRIPT_DIR/../lib/utils.sh"

PRODUCT="${1}"
SUITE="${2:-bullseye}"
EDITION="${3:-cli}"
OUTPUT="$PWD/out/${PRODUCT}_${SUITE}_${EDITION}"

RSDK_OPTION_EFI="${RSDK_OPTION_EFI:-true}"
RSDK_OPTION_ROOTFS="${RSDK_OPTION_ROOTFS:-rootfs.tar}"
RSDK_OPTION_IMAGE_NAME="${RSDK_OPTION_IMAGE_NAME:-output.img}"

JSONNET_ARGS=(
	"-S"
	"--tla-str" "product=$PRODUCT"
)

if [[ -n ${RSDK_OPTION_EFI} ]]; then
	JSONNET_ARGS+=("--tla-code" "efi=$RSDK_OPTION_EFI")
fi

if [[ -n ${RSDK_OPTION_ROOTFS} ]]; then
	JSONNET_ARGS+=("--tla-str" "rootfs=$RSDK_OPTION_ROOTFS")
fi

if [[ -n ${RSDK_OPTION_IMAGE_NAME} ]]; then
	JSONNET_ARGS+=("--tla-str" "output=$RSDK_OPTION_IMAGE_NAME")
fi

jsonnet "${JSONNET_ARGS[@]}" "$SCRIPT_DIR/../../templates/image.jsonnet" -o "$OUTPUT/build-image"
chmod +x "$OUTPUT/build-image"

pushd "$OUTPUT"
if [[ -f $RSDK_OPTION_ROOTFS ]]; then
	./build-image
elif [[ -d $RSDK_OPTION_ROOTFS ]]; then
	sudo ./build-image
	sudo chown "$UID:${GID:-$UID}" "$RSDK_OPTION_IMAGE_NAME"
else
	echo "Unrecognized rootfs type for '$RSDK_OPTION_ROOTFS'." >&2
	popd
	exit 1
fi
popd
