#!/usr/bin/env bash

main() {
	local SCRIPT_DIR
	SCRIPT_DIR="$(dirname "$(realpath "$0")")"
	# shellcheck source=bin/lib/utils.sh
	source "$SCRIPT_DIR/../lib/utils.sh"

	local TEMP
	if ! TEMP="$(getopt -o "hdTm:M:i:" -l "no-efi,help,debug,test-repo,mirror:,image-name,no-cache" -n "$0" -- "$@")"; then
		return
	fi
	eval set -- "$TEMP"

	export RSDK_OPTION_EFI="${RSDK_OPTION_EFI:-true}"
	export RSDK_OPTION_DEBUG="${RSDK_OPTION_DEBUG:-false}"
	export RSDK_OPTION_REPO_SUFFIX="${RSDK_OPTION_REPO_SUFFIX:-}"
	export RSDK_OPTION_DISTRO_MIRROR="${RSDK_OPTION_DISTRO_MIRROR:-}"
	export RSDK_OPTION_RADXA_MIRROR="${RSDK_OPTION_RADXA_MIRROR:-}"
	export RSDK_OPTION_ROOTFS="${RSDK_OPTION_ROOTFS:-rootfs.tar}"
	export RSDK_OPTION_IMAGE_NAME="${RSDK_OPTION_IMAGE_NAME:-output.img}"
	export RSDK_OPTION_CACHE="${RSDK_OPTION_CACHE:-true}"

	while true; do
		TEMP="$1"
		shift
		case "$TEMP" in
		--no-cache)
			RSDK_OPTION_CACHE="false"
			;;
		--no-efi)
			RSDK_OPTION_EFI="false"
			;;
		-d | --debug)
			RSDK_OPTION_DEBUG="true"
			RSDK_OPTION_ROOTFS="rootfs"
			;;
		-T | --test-repo)
			RSDK_OPTION_REPO_SUFFIX="-test"
			;;
		-m | --mirror)
			RSDK_OPTION_DISTRO_MIRROR="$1"
			shift
			;;
		-M)
			RSDK_OPTION_RADXA_MIRROR="$1"
			shift
			;;
		-i | --image-name)
			RSDK_OPTION_IMAGE_NAME="$1"
			shift
			;;
		-h | --help)
			rsdk help
			return
			;;
		--)
			break
			;;
		*)
			error $EXIT_UNKNOWN_OPTION "$TEMP"
			;;
		esac
	done

	PRODUCT="${1}"
	SUITE="${2:-bullseye}"
	EDITION="${3:-cli}"
	OUTPUT="$PWD/out/${PRODUCT}_${SUITE}_${EDITION}"

	if [[ $RSDK_OPTION_CACHE == "false" ]] || ([[ -f "$OUTPUT/$RSDK_OPTION_ROOTFS" ]] && (($(du -b "$OUTPUT/$RSDK_OPTION_ROOTFS" | cut -f 1) == 0))); then
		sudo rm -rf "$OUTPUT/$RSDK_OPTION_ROOTFS"
	fi

	if [[ ! -e "$OUTPUT/$RSDK_OPTION_ROOTFS" ]]; then
		rsdk build-rootfs "$PRODUCT" "$SUITE" "$EDITION"
	fi

	rsdk build-image "$PRODUCT" "$SUITE" "$EDITION"
}

main "$@"
